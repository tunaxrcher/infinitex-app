import { PrismaClient } from '@prisma/client'
import bcrypt from 'bcryptjs'

const prisma = new PrismaClient()

async function main() {
  console.log('üå± Starting database seeding...')

  // Clear existing data (in dependency order)
  console.log('üßπ Clearing existing data...')
  await prisma.auditLog.deleteMany()
  await prisma.adminSession.deleteMany()
  await prisma.adminPermission.deleteMany()
  await prisma.admin.deleteMany()

  await prisma.session.deleteMany()
  await prisma.notification.deleteMany()
  await prisma.coinTransaction.deleteMany()
  await prisma.rewardRedemption.deleteMany()
  await prisma.reward.deleteMany()
  await prisma.payment.deleteMany()
  await prisma.loanInstallment.deleteMany()
  await prisma.loan.deleteMany()
  await prisma.loanApplication.deleteMany()
  await prisma.agentCustomer.deleteMany()
  await prisma.userProfile.deleteMany()
  await prisma.user.deleteMany()

  await prisma.banner.deleteMany()
  await prisma.privilege.deleteMany()
  await prisma.systemConfig.deleteMany()

  // ============================================
  // 1. Create Admin Users
  // ============================================
  console.log('üë®‚Äçüíº Creating admin users...')

  const superAdmin = await prisma.admin.create({
    data: {
      email: 'admin@infinitex.com',
      password: await bcrypt.hash('admin123', 10),
      firstName: 'Super',
      lastName: 'Admin',
      role: 'SUPER_ADMIN',
      isActive: true,
      lastLoginAt: new Date(),
    },
  })

  const loanOfficer = await prisma.admin.create({
    data: {
      email: 'loan.officer@infinitex.com',
      password: await bcrypt.hash('loan123', 10),
      firstName: 'Loan',
      lastName: 'Officer',
      role: 'LOAN_OFFICER',
      isActive: true,
    },
  })

  const customerService = await prisma.admin.create({
    data: {
      email: 'support@infinitex.com',
      password: await bcrypt.hash('support123', 10),
      firstName: 'Customer',
      lastName: 'Service',
      role: 'CUSTOMER_SERVICE',
      isActive: true,
    },
  })

  // ============================================
  // 2. Create Admin Permissions
  // ============================================
  console.log('üîë Creating admin permissions...')

  // Super Admin gets all permissions
  const allPermissions = [
    'VIEW_APPLICATIONS',
    'APPROVE_APPLICATIONS',
    'REJECT_APPLICATIONS',
    'VIEW_LOANS',
    'CREATE_LOANS',
    'UPDATE_LOANS',
    'DELETE_LOANS',
    'VIEW_USERS',
    'CREATE_USERS',
    'UPDATE_USERS',
    'DELETE_USERS',
    'MANAGE_AGENTS',
    'VIEW_PAYMENTS',
    'PROCESS_PAYMENTS',
    'REFUND_PAYMENTS',
    'MANAGE_BANNERS',
    'MANAGE_PRIVILEGES',
    'MANAGE_REWARDS',
    'MANAGE_SYSTEM_CONFIG',
    'VIEW_AUDIT_LOGS',
    'VIEW_REPORTS',
    'EXPORT_DATA',
  ]

  for (const permission of allPermissions) {
    await prisma.adminPermission.create({
      data: {
        adminId: superAdmin.id,
        permission: permission as any,
        grantedBy: superAdmin.id,
      },
    })
  }

  // Loan Officer permissions
  const loanOfficerPermissions = [
    'VIEW_APPLICATIONS',
    'APPROVE_APPLICATIONS',
    'REJECT_APPLICATIONS',
    'VIEW_LOANS',
    'CREATE_LOANS',
    'UPDATE_LOANS',
    'VIEW_USERS',
    'VIEW_PAYMENTS',
    'PROCESS_PAYMENTS',
  ]

  for (const permission of loanOfficerPermissions) {
    await prisma.adminPermission.create({
      data: {
        adminId: loanOfficer.id,
        permission: permission as any,
        grantedBy: superAdmin.id,
      },
    })
  }

  // ============================================
  // 3. Create Test Users (Customers & Agents)
  // ============================================
  console.log('üë• Creating test users...')

  // Create Customers (Extended)
  const customers = []

  const customer1 = await prisma.user.create({
    data: {
      phoneNumber: '0801234567',
      pin: await bcrypt.hash('1234', 10),
      userType: 'CUSTOMER',
      isActive: true,
      lastLoginAt: new Date(Date.now() - 2 * 60 * 60 * 1000), // 2 hours ago
      profile: {
        create: {
          firstName: '‡∏™‡∏°‡∏ä‡∏≤‡∏¢',
          lastName: '‡πÉ‡∏à‡∏î‡∏µ',
          idCardNumber: '1234567890123',
          dateOfBirth: new Date('1985-06-15'),
          email: 'somchai@example.com',
          address:
            '123 ‡∏´‡∏°‡∏π‡πà 1 ‡∏ï‡∏≥‡∏ö‡∏•‡∏Ñ‡∏•‡∏≠‡∏á‡∏´‡∏•‡∏ß‡∏á ‡∏≠‡∏≥‡πÄ‡∏†‡∏≠‡∏Ñ‡∏•‡∏≠‡∏á‡∏´‡∏•‡∏ß‡∏á ‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î‡∏õ‡∏ó‡∏∏‡∏°‡∏ò‡∏≤‡∏ô‡∏µ 12120',
          coinBalance: 150,
          preferredLanguage: 'th',
          notificationEnabled: true,
        },
      },
    },
  })
  customers.push(customer1)

  const customer2 = await prisma.user.create({
    data: {
      phoneNumber: '0812345678',
      pin: await bcrypt.hash('5678', 10),
      userType: 'CUSTOMER',
      isActive: true,
      lastLoginAt: new Date(Date.now() - 6 * 60 * 60 * 1000), // 6 hours ago
      profile: {
        create: {
          firstName: '‡∏™‡∏°‡∏´‡∏ç‡∏¥‡∏á',
          lastName: '‡∏£‡∏±‡∏Å‡∏î‡∏µ',
          idCardNumber: '1234567890124',
          dateOfBirth: new Date('1990-03-20'),
          email: 'somying@example.com',
          address:
            '456 ‡∏ã‡∏≠‡∏¢‡∏•‡∏≤‡∏î‡∏û‡∏£‡πâ‡∏≤‡∏ß 15 ‡πÅ‡∏Ç‡∏ß‡∏á‡∏à‡∏≠‡∏°‡∏û‡∏• ‡πÄ‡∏Ç‡∏ï‡∏à‡∏ï‡∏∏‡∏à‡∏±‡∏Å‡∏£ ‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏°‡∏´‡∏≤‡∏ô‡∏Ñ‡∏£ 10900',
          coinBalance: 75,
          preferredLanguage: 'th',
          notificationEnabled: true,
        },
      },
    },
  })
  customers.push(customer2)

  // Additional customers for testing
  const customer3 = await prisma.user.create({
    data: {
      phoneNumber: '0823456789',
      pin: await bcrypt.hash('1111', 10),
      userType: 'CUSTOMER',
      isActive: true,
      lastLoginAt: new Date(Date.now() - 1 * 24 * 60 * 60 * 1000), // 1 day ago
      profile: {
        create: {
          firstName: '‡∏ß‡∏¥‡∏ä‡∏±‡∏¢',
          lastName: '‡∏™‡∏∏‡∏Ç‡πÉ‡∏™',
          idCardNumber: '1234567890125',
          dateOfBirth: new Date('1978-11-30'),
          email: 'wichai@example.com',
          address: '789 ‡∏ñ‡∏ô‡∏ô‡∏™‡∏∏‡∏Ç‡∏∏‡∏°‡∏ß‡∏¥‡∏ó ‡πÅ‡∏Ç‡∏ß‡∏á‡∏Ñ‡∏•‡∏≠‡∏á‡πÄ‡∏ï‡∏¢ ‡πÄ‡∏Ç‡∏ï‡∏Ñ‡∏•‡∏≠‡∏á‡πÄ‡∏ï‡∏¢ ‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏°‡∏´‡∏≤‡∏ô‡∏Ñ‡∏£ 10110',
          coinBalance: 320,
          preferredLanguage: 'th',
          notificationEnabled: true,
        },
      },
    },
  })
  customers.push(customer3)

  const customer4 = await prisma.user.create({
    data: {
      phoneNumber: '0834567890',
      pin: await bcrypt.hash('2222', 10),
      userType: 'CUSTOMER',
      isActive: true,
      lastLoginAt: new Date(Date.now() - 3 * 24 * 60 * 60 * 1000), // 3 days ago
      profile: {
        create: {
          firstName: '‡∏ô‡∏†‡∏±‡∏™‡∏™‡∏£',
          lastName: '‡∏à‡∏±‡∏ô‡∏ó‡∏£‡πå‡πÄ‡∏û‡πá‡∏ç',
          idCardNumber: '1234567890126',
          dateOfBirth: new Date('1995-02-14'),
          email: 'napatsorn@example.com',
          address:
            '321 ‡∏ã‡∏≠‡∏¢‡∏£‡∏±‡∏ä‡∏î‡∏≤‡∏†‡∏¥‡πÄ‡∏©‡∏Å 18 ‡πÅ‡∏Ç‡∏ß‡∏á‡∏´‡πâ‡∏ß‡∏¢‡∏Ç‡∏ß‡∏≤‡∏á ‡πÄ‡∏Ç‡∏ï‡∏´‡πâ‡∏ß‡∏¢‡∏Ç‡∏ß‡∏≤‡∏á ‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏°‡∏´‡∏≤‡∏ô‡∏Ñ‡∏£ 10310',
          coinBalance: 0,
          preferredLanguage: 'th',
          notificationEnabled: true,
        },
      },
    },
  })
  customers.push(customer4)

  const customer5 = await prisma.user.create({
    data: {
      phoneNumber: '0845678901',
      pin: await bcrypt.hash('3333', 10),
      userType: 'CUSTOMER',
      isActive: true,
      lastLoginAt: new Date(Date.now() - 7 * 24 * 60 * 60 * 1000), // 1 week ago
      profile: {
        create: {
          firstName: '‡∏õ‡∏£‡∏∞‡∏¢‡∏∏‡∏ó‡∏ò',
          lastName: '‡∏°‡∏±‡πà‡∏ô‡∏Ñ‡∏á',
          idCardNumber: '1234567890127',
          dateOfBirth: new Date('1982-09-05'),
          email: 'prayuth@example.com',
          address: '567 ‡∏´‡∏°‡∏π‡πà 5 ‡∏ï‡∏≥‡∏ö‡∏•‡∏ö‡∏≤‡∏á‡∏û‡∏•‡∏µ ‡∏≠‡∏≥‡πÄ‡∏†‡∏≠‡∏ö‡∏≤‡∏á‡∏û‡∏•‡∏µ ‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î‡∏™‡∏°‡∏∏‡∏ó‡∏£‡∏õ‡∏£‡∏≤‡∏Å‡∏≤‡∏£ 10540',
          coinBalance: 85,
          preferredLanguage: 'th',
          notificationEnabled: false,
        },
      },
    },
  })
  customers.push(customer5)

  const customer6 = await prisma.user.create({
    data: {
      phoneNumber: '0856789012',
      pin: await bcrypt.hash('4444', 10),
      userType: 'CUSTOMER',
      isActive: false, // Inactive customer
      lastLoginAt: new Date(Date.now() - 30 * 24 * 60 * 60 * 1000), // 30 days ago
      profile: {
        create: {
          firstName: '‡∏™‡∏∏‡∏ó‡∏ò‡∏¥‡∏î‡∏≤',
          lastName: '‡πÄ‡∏î‡∏¥‡∏ô‡∏î‡∏µ',
          idCardNumber: '1234567890128',
          dateOfBirth: new Date('1993-07-22'),
          email: 'sutthida@example.com',
          address:
            '890 ‡∏ñ‡∏ô‡∏ô‡∏û‡∏£‡∏∞‡∏£‡∏≤‡∏° 4 ‡πÅ‡∏Ç‡∏ß‡∏á‡∏™‡∏∏‡∏£‡∏¥‡∏¢‡∏ß‡∏á‡∏®‡πå ‡πÄ‡∏Ç‡∏ï‡∏ö‡∏≤‡∏á‡∏£‡∏±‡∏Å ‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏°‡∏´‡∏≤‡∏ô‡∏Ñ‡∏£ 10500',
          coinBalance: 25,
          preferredLanguage: 'th',
          notificationEnabled: true,
        },
      },
    },
  })
  customers.push(customer6)

  const customer7 = await prisma.user.create({
    data: {
      phoneNumber: '0867890123',
      pin: await bcrypt.hash('5555', 10),
      userType: 'CUSTOMER',
      isActive: true,
      lastLoginAt: new Date(Date.now() - 30 * 60 * 1000), // 30 minutes ago
      profile: {
        create: {
          firstName: '‡∏≠‡∏£‡∏£‡∏ñ‡∏û‡∏•',
          lastName: '‡πÄ‡∏Å‡πà‡∏á‡∏Å‡∏≤‡∏£',
          idCardNumber: '1234567890129',
          dateOfBirth: new Date('1987-12-18'),
          email: 'auttapol@example.com',
          address:
            '456 ‡∏ã‡∏≠‡∏¢‡∏≠‡πà‡∏≠‡∏ô‡∏ô‡∏∏‡∏ä 17 ‡πÅ‡∏Ç‡∏ß‡∏á‡∏™‡∏ß‡∏ô‡∏´‡∏•‡∏ß‡∏á ‡πÄ‡∏Ç‡∏ï‡∏™‡∏ß‡∏ô‡∏´‡∏•‡∏ß‡∏á ‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏°‡∏´‡∏≤‡∏ô‡∏Ñ‡∏£ 10250',
          coinBalance: 200,
          preferredLanguage: 'th',
          notificationEnabled: true,
        },
      },
    },
  })
  customers.push(customer7)

  const customer8 = await prisma.user.create({
    data: {
      phoneNumber: '0878901234',
      pin: await bcrypt.hash('6666', 10),
      userType: 'CUSTOMER',
      isActive: true,
      lastLoginAt: new Date(Date.now() - 12 * 60 * 60 * 1000), // 12 hours ago
      profile: {
        create: {
          firstName: '‡∏£‡∏±‡∏ï‡∏ô‡∏≤',
          lastName: '‡∏™‡∏∏‡∏Ç‡∏™‡∏°',
          idCardNumber: '1234567890130',
          dateOfBirth: new Date('1991-04-08'),
          email: 'ratana@example.com',
          address:
            '123 ‡∏ã‡∏≠‡∏¢‡πÄ‡∏û‡∏ä‡∏£‡∏ö‡∏∏‡∏£‡∏µ 30 ‡πÅ‡∏Ç‡∏ß‡∏á‡∏°‡∏±‡∏Å‡∏Å‡∏∞‡∏™‡∏±‡∏ô ‡πÄ‡∏Ç‡∏ï‡∏£‡∏≤‡∏ä‡πÄ‡∏ó‡∏ß‡∏µ ‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏°‡∏´‡∏≤‡∏ô‡∏Ñ‡∏£ 10400',
          coinBalance: 450,
          preferredLanguage: 'th',
          notificationEnabled: true,
        },
      },
    },
  })
  customers.push(customer8)

  // Create Agents (Extended)
  const agents = []

  const agent1 = await prisma.user.create({
    data: {
      phoneNumber: '0891234567',
      pin: await bcrypt.hash('9999', 10),
      userType: 'AGENT',
      isActive: true,
      lastLoginAt: new Date(Date.now() - 1 * 60 * 60 * 1000), // 1 hour ago
      profile: {
        create: {
          firstName: '‡∏™‡∏∏‡∏£‡∏ä‡∏±‡∏¢',
          lastName: '‡πÄ‡∏Å‡πà‡∏á‡∏á‡∏≤‡∏ô',
          idCardNumber: '1234567890131',
          dateOfBirth: new Date('1988-12-10'),
          email: 'agent1@infinitex.com',
          address: '‡∏™‡∏≥‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô‡πÉ‡∏´‡∏ç‡πà ‡∏≠‡∏¥‡∏ô‡∏ü‡∏¥‡∏ô‡∏¥‡πÄ‡∏ó‡πá‡∏Å‡∏ã‡πå ‡∏ñ‡∏ô‡∏ô‡∏™‡∏µ‡∏•‡∏° ‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏°‡∏´‡∏≤‡∏ô‡∏Ñ‡∏£',
          coinBalance: 0,
          preferredLanguage: 'th',
          notificationEnabled: true,
        },
      },
    },
  })
  agents.push(agent1)

  const agent2 = await prisma.user.create({
    data: {
      phoneNumber: '0892345678',
      pin: await bcrypt.hash('8888', 10),
      userType: 'AGENT',
      isActive: true,
      lastLoginAt: new Date(Date.now() - 3 * 60 * 60 * 1000), // 3 hours ago
      profile: {
        create: {
          firstName: '‡∏ß‡∏£‡∏£‡∏ì‡∏≤',
          lastName: '‡∏î‡∏µ‡πÄ‡∏¢‡∏µ‡πà‡∏¢‡∏°',
          idCardNumber: '1234567890132',
          dateOfBirth: new Date('1992-08-25'),
          email: 'agent2@infinitex.com',
          address: '‡∏™‡∏≤‡∏Ç‡∏≤‡∏™‡∏≤‡∏ó‡∏£ ‡∏≠‡∏¥‡∏ô‡∏ü‡∏¥‡∏ô‡∏¥‡πÄ‡∏ó‡πá‡∏Å‡∏ã‡πå ‡∏ñ‡∏ô‡∏ô‡∏™‡∏≤‡∏ó‡∏£‡πÉ‡∏ï‡πâ ‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏°‡∏´‡∏≤‡∏ô‡∏Ñ‡∏£',
          coinBalance: 0,
          preferredLanguage: 'th',
          notificationEnabled: true,
        },
      },
    },
  })
  agents.push(agent2)

  const agent3 = await prisma.user.create({
    data: {
      phoneNumber: '0893456789',
      pin: await bcrypt.hash('7777', 10),
      userType: 'AGENT',
      isActive: true,
      lastLoginAt: new Date(Date.now() - 5 * 60 * 60 * 1000), // 5 hours ago
      profile: {
        create: {
          firstName: '‡∏ò‡∏µ‡∏£‡∏∞',
          lastName: '‡∏õ‡∏£‡∏∞‡∏™‡∏ö‡∏ú‡∏•',
          idCardNumber: '1234567890133',
          dateOfBirth: new Date('1985-03-15'),
          email: 'agent3@infinitex.com',
          address: '‡∏™‡∏≤‡∏Ç‡∏≤‡∏•‡∏≤‡∏î‡∏û‡∏£‡πâ‡∏≤‡∏ß ‡∏≠‡∏¥‡∏ô‡∏ü‡∏¥‡∏ô‡∏¥‡πÄ‡∏ó‡πá‡∏Å‡∏ã‡πå ‡∏ñ‡∏ô‡∏ô‡∏•‡∏≤‡∏î‡∏û‡∏£‡πâ‡∏≤‡∏ß ‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏°‡∏´‡∏≤‡∏ô‡∏Ñ‡∏£',
          coinBalance: 0,
          preferredLanguage: 'th',
          notificationEnabled: true,
        },
      },
    },
  })
  agents.push(agent3)

  const agent4 = await prisma.user.create({
    data: {
      phoneNumber: '0894567890',
      pin: await bcrypt.hash('6666', 10),
      userType: 'AGENT',
      isActive: true,
      lastLoginAt: new Date(Date.now() - 2 * 24 * 60 * 60 * 1000), // 2 days ago
      profile: {
        create: {
          firstName: '‡∏à‡∏¥‡∏£‡∏±‡∏ä‡∏ç‡∏≤',
          lastName: '‡∏ó‡∏≥‡∏î‡∏µ',
          idCardNumber: '1234567890134',
          dateOfBirth: new Date('1990-11-08'),
          email: 'agent4@infinitex.com',
          address: '‡∏™‡∏≤‡∏Ç‡∏≤‡∏õ‡∏¥‡πà‡∏ô‡πÄ‡∏Å‡∏•‡πâ‡∏≤ ‡∏≠‡∏¥‡∏ô‡∏ü‡∏¥‡∏ô‡∏¥‡πÄ‡∏ó‡πá‡∏Å‡∏ã‡πå ‡∏ñ‡∏ô‡∏ô‡∏ö‡∏£‡∏°‡∏£‡∏≤‡∏ä‡∏ä‡∏ô‡∏ô‡∏µ ‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏°‡∏´‡∏≤‡∏ô‡∏Ñ‡∏£',
          coinBalance: 0,
          preferredLanguage: 'th',
          notificationEnabled: true,
        },
      },
    },
  })
  agents.push(agent4)

  const agent5 = await prisma.user.create({
    data: {
      phoneNumber: '0895678901',
      pin: await bcrypt.hash('5555', 10),
      userType: 'AGENT',
      isActive: false, // Inactive agent
      lastLoginAt: new Date(Date.now() - 15 * 24 * 60 * 60 * 1000), // 15 days ago
      profile: {
        create: {
          firstName: '‡∏™‡∏°‡πÄ‡∏Å‡∏µ‡∏¢‡∏£‡∏ï‡∏¥',
          lastName: '‡∏´‡∏¢‡∏∏‡∏î‡∏û‡∏±‡∏Å',
          idCardNumber: '1234567890135',
          dateOfBirth: new Date('1987-06-20'),
          email: 'agent5@infinitex.com',
          address: '‡∏™‡∏≤‡∏Ç‡∏≤‡∏ö‡∏≤‡∏á‡∏ô‡∏≤ ‡∏≠‡∏¥‡∏ô‡∏ü‡∏¥‡∏ô‡∏¥‡πÄ‡∏ó‡πá‡∏Å‡∏ã‡πå ‡∏ñ‡∏ô‡∏ô‡∏ö‡∏≤‡∏á‡∏ô‡∏≤ ‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏°‡∏´‡∏≤‡∏ô‡∏Ñ‡∏£',
          coinBalance: 0,
          preferredLanguage: 'th',
          notificationEnabled: false,
        },
      },
    },
  })
  agents.push(agent5)

  // ============================================
  // 4. Create Agent-Customer Relationships
  // ============================================
  console.log('ü§ù Creating agent-customer relationships...')

  // Agent 1 (‡∏™‡∏∏‡∏£‡∏ä‡∏±‡∏¢) handles customers 1, 3, 7
  await prisma.agentCustomer.create({
    data: {
      agentId: agent1.id,
      customerId: customer1.id,
      assignedAt: new Date(Date.now() - 30 * 24 * 60 * 60 * 1000), // 30 days ago
      isActive: true,
    },
  })

  await prisma.agentCustomer.create({
    data: {
      agentId: agent1.id,
      customerId: customer3.id,
      assignedAt: new Date(Date.now() - 20 * 24 * 60 * 60 * 1000), // 20 days ago
      isActive: true,
    },
  })

  await prisma.agentCustomer.create({
    data: {
      agentId: agent1.id,
      customerId: customer7.id,
      assignedAt: new Date(Date.now() - 5 * 24 * 60 * 60 * 1000), // 5 days ago
      isActive: true,
    },
  })

  // Agent 2 (‡∏ß‡∏£‡∏£‡∏ì‡∏≤) handles customers 2, 4, 8
  await prisma.agentCustomer.create({
    data: {
      agentId: agent2.id,
      customerId: customer2.id,
      assignedAt: new Date(Date.now() - 25 * 24 * 60 * 60 * 1000), // 25 days ago
      isActive: true,
    },
  })

  await prisma.agentCustomer.create({
    data: {
      agentId: agent2.id,
      customerId: customer4.id,
      assignedAt: new Date(Date.now() - 15 * 24 * 60 * 60 * 1000), // 15 days ago
      isActive: true,
    },
  })

  await prisma.agentCustomer.create({
    data: {
      agentId: agent2.id,
      customerId: customer8.id,
      assignedAt: new Date(Date.now() - 3 * 24 * 60 * 60 * 1000), // 3 days ago
      isActive: true,
    },
  })

  // Agent 3 (‡∏ò‡∏µ‡∏£‡∏∞) handles customers 5, 6
  await prisma.agentCustomer.create({
    data: {
      agentId: agent3.id,
      customerId: customer5.id,
      assignedAt: new Date(Date.now() - 12 * 24 * 60 * 60 * 1000), // 12 days ago
      isActive: true,
    },
  })

  await prisma.agentCustomer.create({
    data: {
      agentId: agent3.id,
      customerId: customer6.id,
      assignedAt: new Date(Date.now() - 35 * 24 * 60 * 60 * 1000), // 35 days ago
      isActive: false, // Customer became inactive
    },
  })

  // Agent 4 (‡∏à‡∏¥‡∏£‡∏±‡∏ä‡∏ç‡∏≤) - no customers assigned yet (new agent)

  // ============================================
  // 5. Create Loan Applications
  // ============================================
  console.log('üìã Creating loan applications...')

  const loanApplications = []

  // 1. Approved application for customer1 (‡∏™‡∏°‡∏ä‡∏≤‡∏¢) - ‡∏à‡∏∞‡∏Å‡∏•‡∏≤‡∏¢‡πÄ‡∏õ‡πá‡∏ô‡∏™‡∏¥‡∏ô‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏≠‡∏¢‡∏π‡πà
  const loanApp1 = await prisma.loanApplication.create({
    data: {
      customerId: customer1.id,
      agentId: agent1.id,
      loanType: 'HOUSE_LAND_MORTGAGE',
      status: 'APPROVED',
      currentStep: 4,
      completedSteps: [1, 2, 3, 4],
      isNewUser: false,
      submittedByAgent: true,
      titleDeedImage: '/uploads/title-deed-1.jpg',
      titleDeedData: {
        landNumber: '‡∏ô‡∏™.4‡∏Å/12345',
        ownerName: '‡∏ô‡∏≤‡∏¢‡∏™‡∏°‡∏ä‡∏≤‡∏¢ ‡πÉ‡∏à‡∏î‡∏µ',
        area: '50 ‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏ß‡∏≤',
        location: '‡∏ï‡∏≥‡∏ö‡∏•‡∏Ñ‡∏•‡∏≠‡∏á‡∏´‡∏•‡∏ß‡∏á ‡∏≠‡∏≥‡πÄ‡∏†‡∏≠‡∏Ñ‡∏•‡∏≠‡∏á‡∏´‡∏•‡∏ß‡∏á ‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î‡∏õ‡∏ó‡∏∏‡∏°‡∏ò‡∏≤‡∏ô‡∏µ',
      },
      supportingImages: ['/uploads/support-1.jpg', '/uploads/support-2.jpg'],
      requestedAmount: 500000,
      approvedAmount: 450000,
      maxApprovedAmount: 600000,
      propertyType: '‡∏ö‡πâ‡∏≤‡∏ô‡πÄ‡∏î‡∏µ‡πà‡∏¢‡∏ß',
      propertyValue: 800000,
      propertyArea: '50 ‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏ß‡∏≤',
      propertyLocation: '‡∏ï‡∏≥‡∏ö‡∏•‡∏Ñ‡∏•‡∏≠‡∏á‡∏´‡∏•‡∏ß‡∏á ‡∏≠‡∏≥‡πÄ‡∏†‡∏≠‡∏Ñ‡∏•‡∏≠‡∏á‡∏´‡∏•‡∏ß‡∏á ‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î‡∏õ‡∏ó‡∏∏‡∏°‡∏ò‡∏≤‡∏ô‡∏µ',
      landNumber: '‡∏ô‡∏™.4‡∏Å/12345',
      ownerName: '‡∏ô‡∏≤‡∏¢‡∏™‡∏°‡∏ä‡∏≤‡∏¢ ‡πÉ‡∏à‡∏î‡∏µ',
      submittedAt: new Date(Date.now() - 7 * 24 * 60 * 60 * 1000), // 7 days ago
      reviewedAt: new Date(Date.now() - 5 * 24 * 60 * 60 * 1000), // 5 days ago
      reviewedBy: loanOfficer.id,
      reviewNotes:
        '‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥‡∏™‡∏¥‡∏ô‡πÄ‡∏ä‡∏∑‡πà‡∏≠ 450,000 ‡∏ö‡∏≤‡∏ó ‡∏≠‡∏±‡∏ï‡∏£‡∏≤‡∏î‡∏≠‡∏Å‡πÄ‡∏ö‡∏µ‡πâ‡∏¢ 12% ‡∏ï‡πà‡∏≠‡∏õ‡∏µ ‡∏£‡∏∞‡∏¢‡∏∞‡πÄ‡∏ß‡∏•‡∏≤ 36 ‡πÄ‡∏î‡∏∑‡∏≠‡∏ô',
    },
  })
  loanApplications.push(loanApp1)

  // 2. Under review application for customer2 (‡∏™‡∏°‡∏´‡∏ç‡∏¥‡∏á)
  const loanApp2 = await prisma.loanApplication.create({
    data: {
      customerId: customer2.id,
      agentId: agent2.id,
      loanType: 'HOUSE_LAND_MORTGAGE',
      status: 'UNDER_REVIEW',
      currentStep: 4,
      completedSteps: [1, 2, 3, 4],
      isNewUser: false,
      submittedByAgent: true,
      titleDeedImage: '/uploads/title-deed-2.jpg',
      titleDeedData: {
        landNumber: '‡∏ô‡∏™.3‡∏Ç/67890',
        ownerName: '‡∏ô‡∏≤‡∏á‡∏™‡∏°‡∏´‡∏ç‡∏¥‡∏á ‡∏£‡∏±‡∏Å‡∏î‡∏µ',
        area: '75 ‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏ß‡∏≤',
        location: '‡πÅ‡∏Ç‡∏ß‡∏á‡∏à‡∏≠‡∏°‡∏û‡∏• ‡πÄ‡∏Ç‡∏ï‡∏à‡∏ï‡∏∏‡∏à‡∏±‡∏Å‡∏£ ‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏°‡∏´‡∏≤‡∏ô‡∏Ñ‡∏£',
      },
      supportingImages: ['/uploads/support-3.jpg'],
      requestedAmount: 750000,
      maxApprovedAmount: 900000,
      propertyType: '‡∏ó‡∏≤‡∏ß‡∏ô‡πå‡πÄ‡∏Æ‡∏≤‡∏™‡πå',
      propertyValue: 1200000,
      propertyArea: '75 ‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏ß‡∏≤',
      propertyLocation: '‡πÅ‡∏Ç‡∏ß‡∏á‡∏à‡∏≠‡∏°‡∏û‡∏• ‡πÄ‡∏Ç‡∏ï‡∏à‡∏ï‡∏∏‡∏à‡∏±‡∏Å‡∏£ ‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏°‡∏´‡∏≤‡∏ô‡∏Ñ‡∏£',
      landNumber: '‡∏ô‡∏™.3‡∏Ç/67890',
      ownerName: '‡∏ô‡∏≤‡∏á‡∏™‡∏°‡∏´‡∏ç‡∏¥‡∏á ‡∏£‡∏±‡∏Å‡∏î‡∏µ',
      submittedAt: new Date(Date.now() - 2 * 24 * 60 * 60 * 1000), // 2 days ago
    },
  })
  loanApplications.push(loanApp2)

  // 3. Approved application for customer3 (‡∏ß‡∏¥‡∏ä‡∏±‡∏¢) - ‡∏Å‡∏•‡∏≤‡∏¢‡πÄ‡∏õ‡πá‡∏ô‡∏™‡∏¥‡∏ô‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡πÅ‡∏•‡πâ‡∏ß
  const loanApp3 = await prisma.loanApplication.create({
    data: {
      customerId: customer3.id,
      agentId: agent1.id,
      loanType: 'HOUSE_LAND_MORTGAGE',
      status: 'APPROVED',
      currentStep: 4,
      completedSteps: [1, 2, 3, 4],
      isNewUser: false,
      submittedByAgent: true,
      titleDeedImage: '/uploads/title-deed-3.jpg',
      titleDeedData: {
        landNumber: '‡∏ô‡∏™.2‡∏á/11111',
        ownerName: '‡∏ô‡∏≤‡∏¢‡∏ß‡∏¥‡∏ä‡∏±‡∏¢ ‡∏™‡∏∏‡∏Ç‡πÉ‡∏™',
        area: '120 ‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏ß‡∏≤',
        location: '‡πÅ‡∏Ç‡∏ß‡∏á‡∏Ñ‡∏•‡∏≠‡∏á‡πÄ‡∏ï‡∏¢ ‡πÄ‡∏Ç‡∏ï‡∏Ñ‡∏•‡∏≠‡∏á‡πÄ‡∏ï‡∏¢ ‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏°‡∏´‡∏≤‡∏ô‡∏Ñ‡∏£',
      },
      supportingImages: ['/uploads/support-4.jpg', '/uploads/support-5.jpg'],
      requestedAmount: 800000,
      approvedAmount: 750000,
      maxApprovedAmount: 900000,
      propertyType: '‡∏ö‡πâ‡∏≤‡∏ô‡πÄ‡∏î‡∏µ‡πà‡∏¢‡∏ß 2 ‡∏ä‡∏±‡πâ‡∏ô',
      propertyValue: 1500000,
      propertyArea: '120 ‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏ß‡∏≤',
      propertyLocation: '‡πÅ‡∏Ç‡∏ß‡∏á‡∏Ñ‡∏•‡∏≠‡∏á‡πÄ‡∏ï‡∏¢ ‡πÄ‡∏Ç‡∏ï‡∏Ñ‡∏•‡∏≠‡∏á‡πÄ‡∏ï‡∏¢ ‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏°‡∏´‡∏≤‡∏ô‡∏Ñ‡∏£',
      landNumber: '‡∏ô‡∏™.2‡∏á/11111',
      ownerName: '‡∏ô‡∏≤‡∏¢‡∏ß‡∏¥‡∏ä‡∏±‡∏¢ ‡∏™‡∏∏‡∏Ç‡πÉ‡∏™',
      submittedAt: new Date(Date.now() - 45 * 24 * 60 * 60 * 1000), // 45 days ago
      reviewedAt: new Date(Date.now() - 40 * 24 * 60 * 60 * 1000), // 40 days ago
      reviewedBy: loanOfficer.id,
      reviewNotes:
        '‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥‡∏™‡∏¥‡∏ô‡πÄ‡∏ä‡∏∑‡πà‡∏≠ 750,000 ‡∏ö‡∏≤‡∏ó ‡∏≠‡∏±‡∏ï‡∏£‡∏≤‡∏î‡∏≠‡∏Å‡πÄ‡∏ö‡∏µ‡πâ‡∏¢ 11.5% ‡∏ï‡πà‡∏≠‡∏õ‡∏µ ‡∏£‡∏∞‡∏¢‡∏∞‡πÄ‡∏ß‡∏•‡∏≤ 48 ‡πÄ‡∏î‡∏∑‡∏≠‡∏ô',
    },
  })
  loanApplications.push(loanApp3)

  // 4. Rejected application for customer4 (‡∏ô‡∏†‡∏±‡∏™‡∏™‡∏£)
  const loanApp4 = await prisma.loanApplication.create({
    data: {
      customerId: customer4.id,
      agentId: agent2.id,
      loanType: 'HOUSE_LAND_MORTGAGE',
      status: 'REJECTED',
      currentStep: 4,
      completedSteps: [1, 2, 3, 4],
      isNewUser: false,
      submittedByAgent: true,
      titleDeedImage: '/uploads/title-deed-4.jpg',
      titleDeedData: {
        landNumber: '‡∏ô‡∏™.1‡∏à/22222',
        ownerName: '‡∏ô‡∏≤‡∏á‡∏ô‡∏†‡∏±‡∏™‡∏™‡∏£ ‡∏à‡∏±‡∏ô‡∏ó‡∏£‡πå‡πÄ‡∏û‡πá‡∏ç',
        area: '35 ‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏ß‡∏≤',
        location: '‡πÅ‡∏Ç‡∏ß‡∏á‡∏´‡πâ‡∏ß‡∏¢‡∏Ç‡∏ß‡∏≤‡∏á ‡πÄ‡∏Ç‡∏ï‡∏´‡πâ‡∏ß‡∏¢‡∏Ç‡∏ß‡∏≤‡∏á ‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏°‡∏´‡∏≤‡∏ô‡∏Ñ‡∏£',
      },
      supportingImages: ['/uploads/support-6.jpg'],
      requestedAmount: 600000,
      maxApprovedAmount: 350000,
      propertyType: '‡∏ó‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏Æ‡∏°',
      propertyValue: 450000,
      propertyArea: '35 ‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏ß‡∏≤',
      propertyLocation: '‡πÅ‡∏Ç‡∏ß‡∏á‡∏´‡πâ‡∏ß‡∏¢‡∏Ç‡∏ß‡∏≤‡∏á ‡πÄ‡∏Ç‡∏ï‡∏´‡πâ‡∏ß‡∏¢‡∏Ç‡∏ß‡∏≤‡∏á ‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏°‡∏´‡∏≤‡∏ô‡∏Ñ‡∏£',
      landNumber: '‡∏ô‡∏™.1‡∏à/22222',
      ownerName: '‡∏ô‡∏≤‡∏á‡∏ô‡∏†‡∏±‡∏™‡∏™‡∏£ ‡∏à‡∏±‡∏ô‡∏ó‡∏£‡πå‡πÄ‡∏û‡πá‡∏ç',
      submittedAt: new Date(Date.now() - 20 * 24 * 60 * 60 * 1000), // 20 days ago
      reviewedAt: new Date(Date.now() - 15 * 24 * 60 * 60 * 1000), // 15 days ago
      reviewedBy: loanOfficer.id,
      reviewNotes: '‡∏õ‡∏è‡∏¥‡πÄ‡∏™‡∏ò: ‡∏£‡∏≤‡∏Ñ‡∏≤‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô‡∏´‡∏•‡∏±‡∏Å‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô‡∏ï‡πà‡∏≥‡∏Å‡∏ß‡πà‡∏≤‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡∏Å‡∏π‡πâ‡∏ó‡∏µ‡πà‡∏£‡πâ‡∏≠‡∏á‡∏Ç‡∏≠',
    },
  })
  loanApplications.push(loanApp4)

  // 5. Submitted application for customer5 (‡∏õ‡∏£‡∏∞‡∏¢‡∏∏‡∏ó‡∏ò)
  const loanApp5 = await prisma.loanApplication.create({
    data: {
      customerId: customer5.id,
      agentId: agent3.id,
      loanType: 'HOUSE_LAND_MORTGAGE',
      status: 'SUBMITTED',
      currentStep: 4,
      completedSteps: [1, 2, 3, 4],
      isNewUser: false,
      submittedByAgent: true,
      titleDeedImage: '/uploads/title-deed-5.jpg',
      titleDeedData: {
        landNumber: '‡∏ô‡∏™.5‡∏ü/33333',
        ownerName: '‡∏ô‡∏≤‡∏¢‡∏õ‡∏£‡∏∞‡∏¢‡∏∏‡∏ó‡∏ò ‡∏°‡∏±‡πà‡∏ô‡∏Ñ‡∏á',
        area: '80 ‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏ß‡∏≤',
        location: '‡∏ï‡∏≥‡∏ö‡∏•‡∏ö‡∏≤‡∏á‡∏û‡∏•‡∏µ ‡∏≠‡∏≥‡πÄ‡∏†‡∏≠‡∏ö‡∏≤‡∏á‡∏û‡∏•‡∏µ ‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î‡∏™‡∏°‡∏∏‡∏ó‡∏£‡∏õ‡∏£‡∏≤‡∏Å‡∏≤‡∏£',
      },
      supportingImages: ['/uploads/support-7.jpg', '/uploads/support-8.jpg'],
      requestedAmount: 650000,
      maxApprovedAmount: 780000,
      propertyType: '‡∏ö‡πâ‡∏≤‡∏ô‡πÅ‡∏ù‡∏î',
      propertyValue: 950000,
      propertyArea: '80 ‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏ß‡∏≤',
      propertyLocation: '‡∏ï‡∏≥‡∏ö‡∏•‡∏ö‡∏≤‡∏á‡∏û‡∏•‡∏µ ‡∏≠‡∏≥‡πÄ‡∏†‡∏≠‡∏ö‡∏≤‡∏á‡∏û‡∏•‡∏µ ‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î‡∏™‡∏°‡∏∏‡∏ó‡∏£‡∏õ‡∏£‡∏≤‡∏Å‡∏≤‡∏£',
      landNumber: '‡∏ô‡∏™.5‡∏ü/33333',
      ownerName: '‡∏ô‡∏≤‡∏¢‡∏õ‡∏£‡∏∞‡∏¢‡∏∏‡∏ó‡∏ò ‡∏°‡∏±‡πà‡∏ô‡∏Ñ‡∏á',
      submittedAt: new Date(Date.now() - 1 * 24 * 60 * 60 * 1000), // 1 day ago
    },
  })
  loanApplications.push(loanApp5)

  // 6. Draft application for customer7 (‡∏≠‡∏£‡∏£‡∏ñ‡∏û‡∏•)
  const loanApp6 = await prisma.loanApplication.create({
    data: {
      customerId: customer7.id,
      agentId: agent1.id,
      loanType: 'HOUSE_LAND_MORTGAGE',
      status: 'DRAFT',
      currentStep: 2,
      completedSteps: [1, 2],
      isNewUser: false,
      submittedByAgent: false,
      titleDeedImage: '/uploads/title-deed-6.jpg',
      titleDeedData: {
        landNumber: '‡∏ô‡∏™.7‡∏´/44444',
        ownerName: '‡∏ô‡∏≤‡∏¢‡∏≠‡∏£‡∏£‡∏ñ‡∏û‡∏• ‡πÄ‡∏Å‡πà‡∏á‡∏Å‡∏≤‡∏£',
        area: '60 ‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏ß‡∏≤',
        location: '‡πÅ‡∏Ç‡∏ß‡∏á‡∏™‡∏ß‡∏ô‡∏´‡∏•‡∏ß‡∏á ‡πÄ‡∏Ç‡∏ï‡∏™‡∏ß‡∏ô‡∏´‡∏•‡∏ß‡∏á ‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏°‡∏´‡∏≤‡∏ô‡∏Ñ‡∏£',
      },
      supportingImages: [],
      requestedAmount: 400000,
      maxApprovedAmount: 500000,
      propertyType: '‡∏Ñ‡∏≠‡∏ô‡πÇ‡∏î‡∏°‡∏¥‡πÄ‡∏ô‡∏µ‡∏¢‡∏°',
      propertyValue: 600000,
      propertyArea: '60 ‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏ß‡∏≤',
      propertyLocation: '‡πÅ‡∏Ç‡∏ß‡∏á‡∏™‡∏ß‡∏ô‡∏´‡∏•‡∏ß‡∏á ‡πÄ‡∏Ç‡∏ï‡∏™‡∏ß‡∏ô‡∏´‡∏•‡∏ß‡∏á ‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏°‡∏´‡∏≤‡∏ô‡∏Ñ‡∏£',
      landNumber: '‡∏ô‡∏™.7‡∏´/44444',
      ownerName: '‡∏ô‡∏≤‡∏¢‡∏≠‡∏£‡∏£‡∏ñ‡∏û‡∏• ‡πÄ‡∏Å‡πà‡∏á‡∏Å‡∏≤‡∏£',
    },
  })
  loanApplications.push(loanApp6)

  // 7. Cancelled application for customer8 (‡∏£‡∏±‡∏ï‡∏ô‡∏≤)
  const loanApp7 = await prisma.loanApplication.create({
    data: {
      customerId: customer8.id,
      agentId: agent2.id,
      loanType: 'HOUSE_LAND_MORTGAGE',
      status: 'CANCELLED',
      currentStep: 3,
      completedSteps: [1, 2, 3],
      isNewUser: false,
      submittedByAgent: false,
      titleDeedImage: '/uploads/title-deed-7.jpg',
      titleDeedData: {
        landNumber: '‡∏ô‡∏™.8‡∏Å/55555',
        ownerName: '‡∏ô‡∏≤‡∏á‡∏£‡∏±‡∏ï‡∏ô‡∏≤ ‡∏™‡∏∏‡∏Ç‡∏™‡∏°',
        area: '45 ‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏ß‡∏≤',
        location: '‡πÅ‡∏Ç‡∏ß‡∏á‡∏°‡∏±‡∏Å‡∏Å‡∏∞‡∏™‡∏±‡∏ô ‡πÄ‡∏Ç‡∏ï‡∏£‡∏≤‡∏ä‡πÄ‡∏ó‡∏ß‡∏µ ‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏°‡∏´‡∏≤‡∏ô‡∏Ñ‡∏£',
      },
      supportingImages: ['/uploads/support-9.jpg'],
      requestedAmount: 300000,
      maxApprovedAmount: 400000,
      propertyType: '‡∏≠‡∏≤‡∏Ñ‡∏≤‡∏£‡∏û‡∏≤‡∏ì‡∏¥‡∏ä‡∏¢‡πå',
      propertyValue: 500000,
      propertyArea: '45 ‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏ß‡∏≤',
      propertyLocation: '‡πÅ‡∏Ç‡∏ß‡∏á‡∏°‡∏±‡∏Å‡∏Å‡∏∞‡∏™‡∏±‡∏ô ‡πÄ‡∏Ç‡∏ï‡∏£‡∏≤‡∏ä‡πÄ‡∏ó‡∏ß‡∏µ ‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏°‡∏´‡∏≤‡∏ô‡∏Ñ‡∏£',
      landNumber: '‡∏ô‡∏™.8‡∏Å/55555',
      ownerName: '‡∏ô‡∏≤‡∏á‡∏£‡∏±‡∏ï‡∏ô‡∏≤ ‡∏™‡∏∏‡∏Ç‡∏™‡∏°',
      submittedAt: new Date(Date.now() - 10 * 24 * 60 * 60 * 1000), // 10 days ago
      reviewNotes: '‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡πÉ‡∏ö‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡πÄ‡∏≠‡∏á',
    },
  })
  loanApplications.push(loanApp7)

  // ============================================
  // 6. Create Active Loans
  // ============================================
  console.log('üí∞ Creating active loans...')

  const loans = []

  // Loan 1: ‡∏™‡∏°‡∏ä‡∏≤‡∏¢ (customer1) - ‡∏™‡∏¥‡∏ô‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡πÉ‡∏´‡∏°‡πà ‡∏ä‡∏≥‡∏£‡∏∞‡πÑ‡∏õ‡πÅ‡∏•‡πâ‡∏ß 2 ‡∏á‡∏ß‡∏î
  const loan1 = await prisma.loan.create({
    data: {
      loanNumber: 'FX-2024-000001',
      customerId: customer1.id,
      agentId: agent1.id,
      applicationId: loanApp1.id,
      loanType: 'HOUSE_LAND_MORTGAGE',
      status: 'ACTIVE',
      principalAmount: 450000,
      interestRate: 12.0,
      termMonths: 36,
      monthlyPayment: 14934,
      currentInstallment: 2,
      totalInstallments: 36,
      remainingBalance: 420132,
      nextPaymentDate: new Date(Date.now() + 25 * 24 * 60 * 60 * 1000), // 25 days from now
      contractDate: new Date(Date.now() - 5 * 24 * 60 * 60 * 1000), // 5 days ago
      expiryDate: new Date(Date.now() + (36 * 30 - 5) * 24 * 60 * 60 * 1000), // ~3 years from contract
      titleDeedNumber: '‡∏ô‡∏™.4‡∏Å/12345',
      collateralValue: 800000,
      collateralDetails: {
        type: '‡∏ö‡πâ‡∏≤‡∏ô‡πÄ‡∏î‡∏µ‡πà‡∏¢‡∏ß',
        area: '50 ‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏ß‡∏≤',
        location: '‡∏ï‡∏≥‡∏ö‡∏•‡∏Ñ‡∏•‡∏≠‡∏á‡∏´‡∏•‡∏ß‡∏á ‡∏≠‡∏≥‡πÄ‡∏†‡∏≠‡∏Ñ‡∏•‡∏≠‡∏á‡∏´‡∏•‡∏ß‡∏á ‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î‡∏õ‡∏ó‡∏∏‡∏°‡∏ò‡∏≤‡∏ô‡∏µ',
        estimatedValue: 800000,
      },
    },
  })
  loans.push(loan1)

  // Loan 2: ‡∏ß‡∏¥‡∏ä‡∏±‡∏¢ (customer3) - ‡∏™‡∏¥‡∏ô‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏Å‡πà‡∏≤ ‡∏ä‡∏≥‡∏£‡∏∞‡πÑ‡∏õ‡πÅ‡∏•‡πâ‡∏ß 18 ‡∏á‡∏ß‡∏î
  const loan2 = await prisma.loan.create({
    data: {
      loanNumber: 'FX-2024-000002',
      customerId: customer3.id,
      agentId: agent1.id,
      applicationId: loanApp3.id,
      loanType: 'HOUSE_LAND_MORTGAGE',
      status: 'ACTIVE',
      principalAmount: 750000,
      interestRate: 11.5,
      termMonths: 48,
      monthlyPayment: 19542,
      currentInstallment: 18,
      totalInstallments: 48,
      remainingBalance: 465000,
      nextPaymentDate: new Date(Date.now() + 12 * 24 * 60 * 60 * 1000), // 12 days from now
      contractDate: new Date(Date.now() - 40 * 24 * 60 * 60 * 1000), // 40 days ago
      expiryDate: new Date(Date.now() + (48 * 30 - 40) * 24 * 60 * 60 * 1000), // ~4 years from contract minus 40 days
      titleDeedNumber: '‡∏ô‡∏™.2‡∏á/11111',
      collateralValue: 1500000,
      collateralDetails: {
        type: '‡∏ö‡πâ‡∏≤‡∏ô‡πÄ‡∏î‡∏µ‡πà‡∏¢‡∏ß 2 ‡∏ä‡∏±‡πâ‡∏ô',
        area: '120 ‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏ß‡∏≤',
        location: '‡πÅ‡∏Ç‡∏ß‡∏á‡∏Ñ‡∏•‡∏≠‡∏á‡πÄ‡∏ï‡∏¢ ‡πÄ‡∏Ç‡∏ï‡∏Ñ‡∏•‡∏≠‡∏á‡πÄ‡∏ï‡∏¢ ‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏°‡∏´‡∏≤‡∏ô‡∏Ñ‡∏£',
        estimatedValue: 1500000,
      },
    },
  })
  loans.push(loan2)

  // ============================================
  // 7. Create Loan Installments
  // ============================================
  console.log('üìÖ Creating loan installments...')

  // Installments for Loan 1 (‡∏™‡∏°‡∏ä‡∏≤‡∏¢ - 36 months)
  const startDate1 = new Date(loan1.contractDate)
  for (let i = 1; i <= 36; i++) {
    const dueDate = new Date(startDate1)
    dueDate.setMonth(dueDate.getMonth() + i)

    const principalAmount = i === 36 ? 420132 : 12000 // Last payment covers remaining
    const interestAmount = i === 36 ? 2934 - (420132 - 12000) : 2934
    const totalAmount = principalAmount + interestAmount

    const isPaid = i <= 2 // First 2 installments are paid

    await prisma.loanInstallment.create({
      data: {
        loanId: loan1.id,
        installmentNumber: i,
        dueDate,
        principalAmount,
        interestAmount,
        totalAmount,
        isPaid,
        paidDate: isPaid
          ? new Date(dueDate.getTime() - 2 * 24 * 60 * 60 * 1000)
          : null, // Paid 2 days early
        paidAmount: isPaid ? totalAmount : null,
        isLate: false,
      },
    })
  }

  // Installments for Loan 2 (‡∏ß‡∏¥‡∏ä‡∏±‡∏¢ - 48 months, already paid 18 installments)
  const startDate2 = new Date(loan2.contractDate)
  for (let i = 1; i <= 48; i++) {
    const dueDate = new Date(startDate2)
    dueDate.setMonth(dueDate.getMonth() + i)

    const principalAmount = i === 48 ? 465000 : 15000 // Last payment covers remaining
    const interestAmount = i === 48 ? 4542 - (465000 - 15000) : 4542
    const totalAmount = principalAmount + interestAmount

    const isPaid = i <= 18 // First 18 installments are paid

    // Some payments were late (installments 5, 12, 16)
    const isLate = isPaid && [5, 12, 16].includes(i)
    const lateDays = isLate ? Math.floor(Math.random() * 10) + 3 : null // 3-12 days late
    const lateFee = isLate ? 500 : null

    await prisma.loanInstallment.create({
      data: {
        loanId: loan2.id,
        installmentNumber: i,
        dueDate,
        principalAmount,
        interestAmount,
        totalAmount: totalAmount + (lateFee || 0),
        isPaid,
        paidDate: isPaid
          ? isLate
            ? new Date(dueDate.getTime() + lateDays! * 24 * 60 * 60 * 1000)
            : new Date(
                dueDate.getTime() -
                  Math.floor(Math.random() * 5) * 24 * 60 * 60 * 1000
              )
          : null,
        paidAmount: isPaid ? totalAmount + (lateFee || 0) : null,
        isLate,
        lateDays,
        lateFee,
      },
    })
  }

  // ============================================
  // 8. Create Payment Records
  // ============================================
  console.log('üí≥ Creating payment records...')

  // Get paid installments for both loans
  const paidInstallments = await prisma.loanInstallment.findMany({
    where: { isPaid: true },
    orderBy: [{ loanId: 'asc' }, { installmentNumber: 'asc' }],
  })

  const paymentMethods = [
    'QR_CODE',
    'BARCODE',
    'QR_CODE',
    'QR_CODE',
    'BARCODE',
  ] as const

  for (let i = 0; i < paidInstallments.length; i++) {
    const installment = paidInstallments[i]
    const loan = loans.find((l) => l.id === installment.loanId)!
    const customer = installment.loanId === loan1.id ? customer1 : customer3

    await prisma.payment.create({
      data: {
        userId: customer.id,
        loanId: installment.loanId,
        installmentId: installment.id,
        amount: installment.totalAmount,
        paymentMethod: paymentMethods[i % paymentMethods.length],
        status: 'COMPLETED',
        referenceNumber: `PAY-${Date.now() + i}-${installment.installmentNumber}`,
        transactionId: `TXN-${Math.random().toString(36).substr(2, 9)}`,
        qrCode:
          paymentMethods[i % paymentMethods.length] === 'QR_CODE'
            ? `QR-${Math.random().toString(36).substr(2, 12)}`
            : null,
        barcodeNumber:
          paymentMethods[i % paymentMethods.length] === 'BARCODE'
            ? `BC-${Math.random().toString(36).substr(2, 10)}`
            : null,
        dueDate: installment.dueDate,
        paidDate: installment.paidDate,
        principalAmount: installment.principalAmount,
        interestAmount: installment.interestAmount,
        feeAmount: installment.lateFee || 0,
      },
    })
  }

  // ============================================
  // 9. Create Rewards
  // ============================================
  console.log('üéÅ Creating rewards...')

  const rewards = [
    {
      name: '‡∏™‡πà‡∏ß‡∏ô‡∏•‡∏î 7-Eleven 50 ‡∏ö‡∏≤‡∏ó',
      description: '‡∏ö‡∏±‡∏ï‡∏£‡∏Å‡∏≥‡∏ô‡∏±‡∏•‡∏™‡πà‡∏ß‡∏ô‡∏•‡∏î 7-Eleven ‡∏°‡∏π‡∏•‡∏Ñ‡πà‡∏≤ 50 ‡∏ö‡∏≤‡∏ó ‡πÉ‡∏ä‡πâ‡πÑ‡∏î‡πâ‡∏ó‡∏∏‡∏Å‡∏™‡∏≤‡∏Ç‡∏≤',
      coinCost: 100,
      imageUrl: '/images/reward-7eleven.png',
      stockCount: 50,
    },
    {
      name: '‡∏ö‡∏±‡∏ï‡∏£‡∏Å‡∏≥‡∏ô‡∏±‡∏• Central 200 ‡∏ö‡∏≤‡∏ó',
      description: '‡∏ö‡∏±‡∏ï‡∏£‡∏Å‡∏≥‡∏ô‡∏±‡∏•‡∏´‡πâ‡∏≤‡∏á‡πÄ‡∏ã‡πá‡∏ô‡∏ó‡∏£‡∏±‡∏• ‡∏°‡∏π‡∏•‡∏Ñ‡πà‡∏≤ 200 ‡∏ö‡∏≤‡∏ó',
      coinCost: 400,
      imageUrl: '/images/reward-central.png',
      stockCount: 20,
    },
    {
      name: '‡∏™‡πà‡∏ß‡∏ô‡∏•‡∏î‡∏î‡∏≠‡∏Å‡πÄ‡∏ö‡∏µ‡πâ‡∏¢ 0.5%',
      description: '‡∏™‡πà‡∏ß‡∏ô‡∏•‡∏î‡∏î‡∏≠‡∏Å‡πÄ‡∏ö‡∏µ‡πâ‡∏¢‡∏™‡∏¥‡∏ô‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏á‡∏ß‡∏î‡∏ñ‡∏±‡∏î‡πÑ‡∏õ 0.5%',
      coinCost: 300,
      imageUrl: '/images/reward-interest.png',
      stockCount: null, // unlimited
    },
    {
      name: '‡∏£‡πà‡∏°‡∏û‡∏±‡∏ö‡∏≠‡∏¥‡∏ô‡∏ü‡∏¥‡∏ô‡∏¥‡πÄ‡∏ó‡πá‡∏Å‡∏ã‡πå',
      description: '‡∏£‡πà‡∏°‡∏û‡∏±‡∏ö‡∏™‡∏µ‡∏ô‡πâ‡∏≥‡πÄ‡∏á‡∏¥‡∏ô ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÇ‡∏•‡πÇ‡∏Å‡πâ‡∏≠‡∏¥‡∏ô‡∏ü‡∏¥‡∏ô‡∏¥‡πÄ‡∏ó‡πá‡∏Å‡∏ã‡πå',
      coinCost: 150,
      imageUrl: '/images/reward-umbrella.png',
      stockCount: 30,
    },
  ]

  for (const reward of rewards) {
    await prisma.reward.create({ data: reward })
  }

  // ============================================
  // 10. Create Coin Transactions
  // ============================================
  console.log('ü™ô Creating coin transactions...')

  // Customer1 (‡∏™‡∏°‡∏ä‡∏≤‡∏¢) coin history
  await prisma.coinTransaction.create({
    data: {
      userId: customer1.id,
      type: 'EARNED_SIGNUP',
      amount: 50,
      description: '‡πÇ‡∏ö‡∏ô‡∏±‡∏™‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡πÉ‡∏´‡∏°‡πà',
      createdAt: new Date(Date.now() - 35 * 24 * 60 * 60 * 1000),
    },
  })

  await prisma.coinTransaction.create({
    data: {
      userId: customer1.id,
      type: 'EARNED_ON_TIME_PAYMENT',
      amount: 50,
      description: '‡∏ä‡∏≥‡∏£‡∏∞‡∏á‡∏ß‡∏î‡∏ó‡∏µ‡πà 1 ‡∏ï‡∏£‡∏á‡πÄ‡∏ß‡∏•‡∏≤',
      loanId: loan1.id,
      createdAt: new Date(Date.now() - 3 * 24 * 60 * 60 * 1000),
    },
  })

  await prisma.coinTransaction.create({
    data: {
      userId: customer1.id,
      type: 'EARNED_ON_TIME_PAYMENT',
      amount: 50,
      description: '‡∏ä‡∏≥‡∏£‡∏∞‡∏á‡∏ß‡∏î‡∏ó‡∏µ‡πà 2 ‡∏ï‡∏£‡∏á‡πÄ‡∏ß‡∏•‡∏≤',
      loanId: loan1.id,
      createdAt: new Date(Date.now() - 1 * 24 * 60 * 60 * 1000),
    },
  })

  // Customer2 (‡∏™‡∏°‡∏´‡∏ç‡∏¥‡∏á) coin history
  await prisma.coinTransaction.create({
    data: {
      userId: customer2.id,
      type: 'EARNED_SIGNUP',
      amount: 50,
      description: '‡πÇ‡∏ö‡∏ô‡∏±‡∏™‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡πÉ‡∏´‡∏°‡πà',
      createdAt: new Date(Date.now() - 30 * 24 * 60 * 60 * 1000),
    },
  })

  await prisma.coinTransaction.create({
    data: {
      userId: customer2.id,
      type: 'EARNED_PROMOTION',
      amount: 25,
      description: '‡πÇ‡∏õ‡∏£‡πÇ‡∏°‡∏ä‡∏±‡πà‡∏ô‡∏™‡πà‡∏á‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô',
      createdAt: new Date(Date.now() - 3 * 24 * 60 * 60 * 1000),
    },
  })

  // Customer3 (‡∏ß‡∏¥‡∏ä‡∏±‡∏¢) coin history - has many transactions due to long loan history
  await prisma.coinTransaction.create({
    data: {
      userId: customer3.id,
      type: 'EARNED_SIGNUP',
      amount: 50,
      description: '‡πÇ‡∏ö‡∏ô‡∏±‡∏™‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡πÉ‡∏´‡∏°‡πà',
      createdAt: new Date(Date.now() - 50 * 24 * 60 * 60 * 1000),
    },
  })

  // On-time payments (16 out of 18 paid installments were on time)
  for (let i = 1; i <= 16; i++) {
    if (![5, 12, 16].includes(i)) {
      // Skip late payments
      await prisma.coinTransaction.create({
        data: {
          userId: customer3.id,
          type: 'EARNED_ON_TIME_PAYMENT',
          amount: 50,
          description: `‡∏ä‡∏≥‡∏£‡∏∞‡∏á‡∏ß‡∏î‡∏ó‡∏µ‡πà ${i} ‡∏ï‡∏£‡∏á‡πÄ‡∏ß‡∏•‡∏≤`,
          loanId: loan2.id,
          createdAt: new Date(Date.now() - (45 - i * 2) * 24 * 60 * 60 * 1000),
        },
      })
    }
  }

  // Daily task rewards for customer3
  await prisma.coinTransaction.create({
    data: {
      userId: customer3.id,
      type: 'EARNED_DAILY_TASK',
      amount: 10,
      description: '‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏ä‡πâ‡πÅ‡∏≠‡∏õ‡∏û‡∏•‡∏¥‡πÄ‡∏Ñ‡∏ä‡∏±‡∏ô‡∏ï‡πà‡∏≠‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á 7 ‡∏ß‡∏±‡∏ô',
      createdAt: new Date(Date.now() - 10 * 24 * 60 * 60 * 1000),
    },
  })

  await prisma.coinTransaction.create({
    data: {
      userId: customer3.id,
      type: 'EARNED_DAILY_TASK',
      amount: 20,
      description: '‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å',
      createdAt: new Date(Date.now() - 5 * 24 * 60 * 60 * 1000),
    },
  })

  // Customer5 (‡∏õ‡∏£‡∏∞‡∏¢‡∏∏‡∏ó‡∏ò) coin history
  await prisma.coinTransaction.create({
    data: {
      userId: customer5.id,
      type: 'EARNED_SIGNUP',
      amount: 50,
      description: '‡πÇ‡∏ö‡∏ô‡∏±‡∏™‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡πÉ‡∏´‡∏°‡πà',
      createdAt: new Date(Date.now() - 15 * 24 * 60 * 60 * 1000),
    },
  })

  await prisma.coinTransaction.create({
    data: {
      userId: customer5.id,
      type: 'EARNED_PROMOTION',
      amount: 25,
      description: '‡πÇ‡∏õ‡∏£‡πÇ‡∏°‡∏ä‡∏±‡πà‡∏ô‡∏™‡πà‡∏á‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô',
      createdAt: new Date(Date.now() - 2 * 24 * 60 * 60 * 1000),
    },
  })

  await prisma.coinTransaction.create({
    data: {
      userId: customer5.id,
      type: 'EARNED_DAILY_TASK',
      amount: 10,
      description: '‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏ä‡πâ‡πÅ‡∏≠‡∏õ‡∏û‡∏•‡∏¥‡πÄ‡∏Ñ‡∏ä‡∏±‡∏ô‡πÉ‡∏ô‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ',
      createdAt: new Date(Date.now() - 1 * 24 * 60 * 60 * 1000),
    },
  })

  // Customer7 (‡∏≠‡∏£‡∏£‡∏ñ‡∏û‡∏•) coin history
  await prisma.coinTransaction.create({
    data: {
      userId: customer7.id,
      type: 'EARNED_SIGNUP',
      amount: 50,
      description: '‡πÇ‡∏ö‡∏ô‡∏±‡∏™‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡πÉ‡∏´‡∏°‡πà',
      createdAt: new Date(Date.now() - 8 * 24 * 60 * 60 * 1000),
    },
  })

  await prisma.coinTransaction.create({
    data: {
      userId: customer7.id,
      type: 'EARNED_PROMOTION',
      amount: 100,
      description: '‡πÇ‡∏õ‡∏£‡πÇ‡∏°‡∏ä‡∏±‡πà‡∏ô‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡πÉ‡∏´‡∏°‡πà ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡πÉ‡∏ö‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏™‡∏¥‡∏ô‡πÄ‡∏ä‡∏∑‡πà‡∏≠',
      createdAt: new Date(Date.now() - 6 * 24 * 60 * 60 * 1000),
    },
  })

  await prisma.coinTransaction.create({
    data: {
      userId: customer7.id,
      type: 'EARNED_DAILY_TASK',
      amount: 25,
      description: '‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡∏Å‡∏≠‡∏ö‡πÉ‡∏ö‡∏™‡∏°‡∏±‡∏Ñ‡∏£',
      createdAt: new Date(Date.now() - 4 * 24 * 60 * 60 * 1000),
    },
  })

  await prisma.coinTransaction.create({
    data: {
      userId: customer7.id,
      type: 'EARNED_DAILY_TASK',
      amount: 25,
      description: '‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô 100%',
      createdAt: new Date(Date.now() - 3 * 24 * 60 * 60 * 1000),
    },
  })

  // Customer8 (‡∏£‡∏±‡∏ï‡∏ô‡∏≤) coin history - has the most coins
  await prisma.coinTransaction.create({
    data: {
      userId: customer8.id,
      type: 'EARNED_SIGNUP',
      amount: 50,
      description: '‡πÇ‡∏ö‡∏ô‡∏±‡∏™‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡πÉ‡∏´‡∏°‡πà',
      createdAt: new Date(Date.now() - 20 * 24 * 60 * 60 * 1000),
    },
  })

  await prisma.coinTransaction.create({
    data: {
      userId: customer8.id,
      type: 'EARNED_PROMOTION',
      amount: 200,
      description: '‡πÇ‡∏õ‡∏£‡πÇ‡∏°‡∏ä‡∏±‡πà‡∏ô‡∏û‡∏¥‡πÄ‡∏®‡∏© ‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡πÉ‡∏´‡∏°‡πà‡πÉ‡∏ô‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡πÅ‡∏£‡∏Å',
      createdAt: new Date(Date.now() - 18 * 24 * 60 * 60 * 1000),
    },
  })

  await prisma.coinTransaction.create({
    data: {
      userId: customer8.id,
      type: 'EARNED_DAILY_TASK',
      amount: 50,
      description: '‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô 3 ‡∏Ñ‡∏ô ‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏ä‡πâ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£',
      createdAt: new Date(Date.now() - 15 * 24 * 60 * 60 * 1000),
    },
  })

  await prisma.coinTransaction.create({
    data: {
      userId: customer8.id,
      type: 'EARNED_DAILY_TASK',
      amount: 25,
      description: '‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏ä‡πâ‡πÅ‡∏≠‡∏õ‡∏û‡∏•‡∏¥‡πÄ‡∏Ñ‡∏ä‡∏±‡∏ô‡∏ï‡πà‡∏≠‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á 14 ‡∏ß‡∏±‡∏ô',
      createdAt: new Date(Date.now() - 12 * 24 * 60 * 60 * 1000),
    },
  })

  await prisma.coinTransaction.create({
    data: {
      userId: customer8.id,
      type: 'EARNED_PROMOTION',
      amount: 75,
      description: '‡πÇ‡∏õ‡∏£‡πÇ‡∏°‡∏ä‡∏±‡πà‡∏ô‡∏£‡∏µ‡∏ß‡∏¥‡∏ß‡πÅ‡∏≠‡∏õ‡∏û‡∏•‡∏¥‡πÄ‡∏Ñ‡∏ä‡∏±‡∏ô 5 ‡∏î‡∏≤‡∏ß',
      createdAt: new Date(Date.now() - 10 * 24 * 60 * 60 * 1000),
    },
  })

  await prisma.coinTransaction.create({
    data: {
      userId: customer8.id,
      type: 'EARNED_DAILY_TASK',
      amount: 50,
      description: '‡∏ó‡∏≥‡πÅ‡∏ö‡∏ö‡∏™‡∏≠‡∏ö‡∏ñ‡∏≤‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡∏û‡∏∂‡∏á‡∏û‡∏≠‡πÉ‡∏à',
      createdAt: new Date(Date.now() - 8 * 24 * 60 * 60 * 1000),
    },
  })

  // ============================================
  // 11. Create Notifications
  // ============================================
  console.log('üîî Creating notifications...')

  const notifications = [
    // Customer1 (‡∏™‡∏°‡∏ä‡∏≤‡∏¢) notifications
    {
      userId: customer1.id,
      type: 'LOAN_APPROVED' as const,
      title: '‡∏™‡∏¥‡∏ô‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥!',
      message:
        '‡∏™‡∏¥‡∏ô‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏°‡∏µ‡∏ß‡∏á‡πÄ‡∏á‡∏¥‡∏ô 450,000 ‡∏ö‡∏≤‡∏ó ‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥‡πÅ‡∏•‡πâ‡∏ß ‡∏≠‡∏±‡∏ï‡∏£‡∏≤‡∏î‡∏≠‡∏Å‡πÄ‡∏ö‡∏µ‡πâ‡∏¢ 12% ‡∏ï‡πà‡∏≠‡∏õ‡∏µ',
      isRead: true,
      readAt: new Date(Date.now() - 4 * 24 * 60 * 60 * 1000),
      createdAt: new Date(Date.now() - 5 * 24 * 60 * 60 * 1000),
    },
    {
      userId: customer1.id,
      type: 'PAYMENT_SUCCESS' as const,
      title: '‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à',
      message:
        '‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏î‡πâ‡∏ä‡∏≥‡∏£‡∏∞‡∏á‡∏ß‡∏î‡∏ó‡∏µ‡πà 1 ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô 14,934 ‡∏ö‡∏≤‡∏ó ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß ‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡πÄ‡∏´‡∏£‡∏µ‡∏¢‡∏ç‡∏ó‡∏≠‡∏á 50 ‡πÄ‡∏´‡∏£‡∏µ‡∏¢‡∏ç',
      isRead: true,
      readAt: new Date(Date.now() - 2 * 24 * 60 * 60 * 1000),
      createdAt: new Date(Date.now() - 3 * 24 * 60 * 60 * 1000),
    },
    {
      userId: customer1.id,
      type: 'PAYMENT_SUCCESS' as const,
      title: '‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à',
      message:
        '‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏î‡πâ‡∏ä‡∏≥‡∏£‡∏∞‡∏á‡∏ß‡∏î‡∏ó‡∏µ‡πà 2 ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô 14,934 ‡∏ö‡∏≤‡∏ó ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß ‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡πÄ‡∏´‡∏£‡∏µ‡∏¢‡∏ç‡∏ó‡∏≠‡∏á 50 ‡πÄ‡∏´‡∏£‡∏µ‡∏¢‡∏ç',
      isRead: true,
      readAt: new Date(Date.now() - 12 * 60 * 60 * 1000),
      createdAt: new Date(Date.now() - 1 * 24 * 60 * 60 * 1000),
    },
    {
      userId: customer1.id,
      type: 'PAYMENT_DUE' as const,
      title: '‡πÉ‡∏Å‡∏•‡πâ‡∏Ñ‡∏£‡∏ö‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏ä‡∏≥‡∏£‡∏∞',
      message: '‡∏á‡∏ß‡∏î‡∏ó‡∏µ‡πà 3 ‡∏Ñ‡∏£‡∏ö‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏ä‡∏≥‡∏£‡∏∞‡πÉ‡∏ô‡∏≠‡∏µ‡∏Å 25 ‡∏ß‡∏±‡∏ô ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô 14,934 ‡∏ö‡∏≤‡∏ó',
      isRead: false,
      createdAt: new Date(Date.now() - 2 * 60 * 60 * 1000),
    },
    {
      userId: customer1.id,
      type: 'PROMOTION' as const,
      title: '‡πÇ‡∏õ‡∏£‡πÇ‡∏°‡∏ä‡∏±‡πà‡∏ô‡∏û‡∏¥‡πÄ‡∏®‡∏©!',
      message: '‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏ä‡∏≥‡∏£‡∏∞‡∏ï‡∏£‡∏á‡πÄ‡∏ß‡∏•‡∏≤ ‡∏£‡∏±‡∏ö‡∏™‡πà‡∏ß‡∏ô‡∏•‡∏î‡∏î‡∏≠‡∏Å‡πÄ‡∏ö‡∏µ‡πâ‡∏¢ 0.5% ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏á‡∏ß‡∏î‡∏ñ‡∏±‡∏î‡πÑ‡∏õ',
      isRead: false,
      createdAt: new Date(Date.now() - 1 * 60 * 60 * 1000),
    },

    // Customer2 (‡∏™‡∏°‡∏´‡∏ç‡∏¥‡∏á) notifications
    {
      userId: customer2.id,
      type: 'SYSTEM_ANNOUNCEMENT' as const,
      title: '‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡∏≠‡∏¢‡∏π‡πà‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö',
      message: '‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏≠‡∏¢‡∏π‡πà‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö ‡∏£‡∏∞‡∏¢‡∏∞‡πÄ‡∏ß‡∏•‡∏≤ 3-5 ‡∏ß‡∏±‡∏ô‡∏ó‡∏≥‡∏Å‡∏≤‡∏£',
      isRead: false,
      createdAt: new Date(Date.now() - 2 * 24 * 60 * 60 * 1000),
    },
    {
      userId: customer2.id,
      type: 'PROMOTION' as const,
      title: '‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡πÄ‡∏´‡∏£‡∏µ‡∏¢‡∏ç‡∏ó‡∏≠‡∏á‡πÇ‡∏ö‡∏ô‡∏±‡∏™!',
      message: '‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡πÄ‡∏´‡∏£‡∏µ‡∏¢‡∏ç‡∏ó‡∏≠‡∏á 25 ‡πÄ‡∏´‡∏£‡∏µ‡∏¢‡∏ç ‡∏à‡∏≤‡∏Å‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô',
      isRead: true,
      readAt: new Date(Date.now() - 1 * 24 * 60 * 60 * 1000),
      createdAt: new Date(Date.now() - 3 * 24 * 60 * 60 * 1000),
    },

    // Customer3 (‡∏ß‡∏¥‡∏ä‡∏±‡∏¢) notifications
    {
      userId: customer3.id,
      type: 'PAYMENT_DUE' as const,
      title: '‡πÉ‡∏Å‡∏•‡πâ‡∏Ñ‡∏£‡∏ö‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏ä‡∏≥‡∏£‡∏∞',
      message: '‡∏á‡∏ß‡∏î‡∏ó‡∏µ‡πà 19 ‡∏Ñ‡∏£‡∏ö‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏ä‡∏≥‡∏£‡∏∞‡πÉ‡∏ô‡∏≠‡∏µ‡∏Å 12 ‡∏ß‡∏±‡∏ô ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô 19,542 ‡∏ö‡∏≤‡∏ó',
      isRead: true,
      readAt: new Date(Date.now() - 3 * 60 * 60 * 1000),
      createdAt: new Date(Date.now() - 5 * 60 * 60 * 1000),
    },
    {
      userId: customer3.id,
      type: 'PROMOTION' as const,
      title: '‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏î‡∏µ‡πÄ‡∏î‡πà‡∏ô!',
      message: '‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏õ‡πá‡∏ô‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏ä‡∏≥‡∏£‡∏∞‡∏ï‡∏£‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡∏°‡∏≤‡∏ï‡∏•‡∏≠‡∏î ‡∏£‡∏±‡∏ö‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡∏û‡∏¥‡πÄ‡∏®‡∏©‡∏™‡πà‡∏ß‡∏ô‡∏•‡∏î‡∏î‡∏≠‡∏Å‡πÄ‡∏ö‡∏µ‡πâ‡∏¢',
      isRead: false,
      createdAt: new Date(Date.now() - 2 * 24 * 60 * 60 * 1000),
    },

    // Customer4 (‡∏ô‡∏†‡∏±‡∏™‡∏™‡∏£) notifications
    {
      userId: customer4.id,
      type: 'LOAN_REJECTED' as const,
      title: '‡πÉ‡∏ö‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏™‡∏¥‡∏ô‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡πÑ‡∏°‡πà‡∏ú‡πà‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥',
      message:
        '‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á‡∏à‡∏≤‡∏Å‡∏£‡∏≤‡∏Ñ‡∏≤‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô‡∏´‡∏•‡∏±‡∏Å‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô‡∏ï‡πà‡∏≥‡∏Å‡∏ß‡πà‡∏≤‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡∏Å‡∏π‡πâ‡∏ó‡∏µ‡πà‡∏£‡πâ‡∏≠‡∏á‡∏Ç‡∏≠ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡πÄ‡∏à‡πâ‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£',
      isRead: true,
      readAt: new Date(Date.now() - 10 * 24 * 60 * 60 * 1000),
      createdAt: new Date(Date.now() - 15 * 24 * 60 * 60 * 1000),
    },
    {
      userId: customer4.id,
      type: 'SYSTEM_ANNOUNCEMENT' as const,
      title: '‡∏Ç‡πâ‡∏≠‡πÄ‡∏™‡∏ô‡∏≠‡πÉ‡∏´‡∏°‡πà‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ñ‡∏∏‡∏ì',
      message:
        '‡πÄ‡∏£‡∏≤‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡πÄ‡∏™‡∏ô‡∏≠‡∏™‡∏¥‡∏ô‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡πÉ‡∏´‡∏°‡πà‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏°‡∏Å‡∏±‡∏ö‡∏Ñ‡∏∏‡∏ì ‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡πÄ‡∏à‡πâ‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏£‡∏±‡∏ö‡∏Ñ‡∏≥‡∏õ‡∏£‡∏∂‡∏Å‡∏©‡∏≤',
      isRead: false,
      createdAt: new Date(Date.now() - 5 * 24 * 60 * 60 * 1000),
    },

    // Customer5 (‡∏õ‡∏£‡∏∞‡∏¢‡∏∏‡∏ó‡∏ò) notifications
    {
      userId: customer5.id,
      type: 'SYSTEM_ANNOUNCEMENT' as const,
      title: '‡πÉ‡∏ö‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢',
      message:
        '‡πÉ‡∏ö‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏™‡∏¥‡∏ô‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö',
      isRead: true,
      readAt: new Date(Date.now() - 12 * 60 * 60 * 1000),
      createdAt: new Date(Date.now() - 1 * 24 * 60 * 60 * 1000),
    },

    // Customer7 (‡∏≠‡∏£‡∏£‡∏ñ‡∏û‡∏•) notifications
    {
      userId: customer7.id,
      type: 'SYSTEM_ANNOUNCEMENT' as const,
      title: '‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°',
      message: '‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡∏™‡∏ô‡∏±‡∏ö‡∏™‡∏ô‡∏∏‡∏ô‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡πà‡∏≠',
      isRead: false,
      createdAt: new Date(Date.now() - 2 * 24 * 60 * 60 * 1000),
    },
    {
      userId: customer7.id,
      type: 'PROMOTION' as const,
      title: '‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡πÄ‡∏´‡∏£‡∏µ‡∏¢‡∏ç‡∏ó‡∏≠‡∏á‡πÇ‡∏ö‡∏ô‡∏±‡∏™!',
      message: '‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡πÄ‡∏´‡∏£‡∏µ‡∏¢‡∏ç‡∏ó‡∏≠‡∏á 100 ‡πÄ‡∏´‡∏£‡∏µ‡∏¢‡∏ç ‡∏à‡∏≤‡∏Å‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡πÉ‡∏ö‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏™‡∏¥‡∏ô‡πÄ‡∏ä‡∏∑‡πà‡∏≠',
      isRead: true,
      readAt: new Date(Date.now() - 5 * 24 * 60 * 60 * 1000),
      createdAt: new Date(Date.now() - 6 * 24 * 60 * 60 * 1000),
    },

    // Customer8 (‡∏£‡∏±‡∏ï‡∏ô‡∏≤) notifications
    {
      userId: customer8.id,
      type: 'SYSTEM_ANNOUNCEMENT' as const,
      title: '‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡πÉ‡∏ö‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à',
      message: '‡πÉ‡∏ö‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏™‡∏¥‡∏ô‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏î‡πâ‡∏ñ‡∏π‡∏Å‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏ï‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏£‡πâ‡∏≠‡∏á‡∏Ç‡∏≠',
      isRead: true,
      readAt: new Date(Date.now() - 8 * 24 * 60 * 60 * 1000),
      createdAt: new Date(Date.now() - 10 * 24 * 60 * 60 * 1000),
    },
    {
      userId: customer8.id,
      type: 'PROMOTION' as const,
      title: '‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏£‡∏µ‡∏ß‡∏¥‡∏ß!',
      message: '‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏ó‡∏µ‡πà‡πÉ‡∏´‡πâ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡∏£‡∏µ‡∏ß‡∏¥‡∏ß‡πÅ‡∏≠‡∏õ‡∏û‡∏•‡∏¥‡πÄ‡∏Ñ‡∏ä‡∏±‡∏ô 5 ‡∏î‡∏≤‡∏ß ‡∏£‡∏±‡∏ö‡πÄ‡∏´‡∏£‡∏µ‡∏¢‡∏ç‡∏ó‡∏≠‡∏á 75 ‡πÄ‡∏´‡∏£‡∏µ‡∏¢‡∏ç',
      isRead: true,
      readAt: new Date(Date.now() - 9 * 24 * 60 * 60 * 1000),
      createdAt: new Date(Date.now() - 10 * 24 * 60 * 60 * 1000),
    },
    {
      userId: customer8.id,
      type: 'PROMOTION' as const,
      title: '‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏ó‡∏≠‡∏á!',
      message: '‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏î‡πâ‡∏ß‡∏¢! ‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏î‡πâ‡πÄ‡∏õ‡πá‡∏ô‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏ó‡∏≠‡∏á‡πÅ‡∏•‡πâ‡∏ß ‡∏£‡∏±‡∏ö‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡∏û‡∏¥‡πÄ‡∏®‡∏©‡∏°‡∏≤‡∏Å‡∏°‡∏≤‡∏¢',
      isRead: false,
      createdAt: new Date(Date.now() - 3 * 24 * 60 * 60 * 1000),
    },

    // General system announcements
    {
      userId: customer6.id,
      type: 'SYSTEM_ANNOUNCEMENT' as const,
      title: '‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏ñ‡∏π‡∏Å‡∏£‡∏∞‡∏á‡∏±‡∏ö‡∏ä‡∏±‡πà‡∏ß‡∏Ñ‡∏£‡∏≤‡∏ß',
      message:
        '‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á‡∏à‡∏≤‡∏Å‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏ß‡∏•‡∏≤‡∏ô‡∏≤‡∏ô ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡πÄ‡∏à‡πâ‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô',
      isRead: false,
      createdAt: new Date(Date.now() - 25 * 24 * 60 * 60 * 1000),
    },
  ]

  for (const notification of notifications) {
    await prisma.notification.create({ data: notification })
  }

  // ============================================
  // 12. Create Banners
  // ============================================
  console.log('üéØ Creating banners...')

  const banners = [
    {
      title: 'FinX Plus - ‡∏î‡∏≠‡∏Å‡πÄ‡∏ö‡∏µ‡πâ‡∏¢‡∏û‡∏¥‡πÄ‡∏®‡∏© 8.99%',
      description: '‡∏™‡∏¥‡∏ô‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡πÉ‡∏´‡∏°‡πà‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î ‡∏î‡∏≠‡∏Å‡πÄ‡∏ö‡∏µ‡πâ‡∏¢‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô 8.99% ‡∏ï‡πà‡∏≠‡∏õ‡∏µ',
      imageUrl: '/images/finx-banner.png',
      actionUrl: '/customer/loan/new',
      isActive: true,
      sortOrder: 1,
      targetUserTypes: ['CUSTOMER'],
      startDate: new Date(),
      endDate: new Date(Date.now() + 30 * 24 * 60 * 60 * 1000), // 30 days
    },
    {
      title: '‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡πÉ‡∏´‡∏°‡πà ‡∏£‡∏±‡∏ö‡πÄ‡∏´‡∏£‡∏µ‡∏¢‡∏ç‡∏ó‡∏≠‡∏á 100',
      description: '‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÉ‡∏´‡∏°‡πà‡∏£‡∏±‡∏ö‡πÄ‡∏´‡∏£‡∏µ‡∏¢‡∏ç‡∏ó‡∏≠‡∏á 100 ‡πÄ‡∏´‡∏£‡∏µ‡∏¢‡∏ç‡∏ü‡∏£‡∏µ!',
      imageUrl: '/fast-approval-financial-banner-modern-design.jpg',
      actionUrl: '/customer/rewards',
      isActive: true,
      sortOrder: 2,
      targetUserTypes: ['CUSTOMER'],
    },
    {
      title: '‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏°‡∏∑‡∏≠‡πÉ‡∏´‡∏°‡πà‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏≠‡πÄ‡∏à‡∏ô‡∏ï‡πå',
      description: '‡∏£‡∏∞‡∏ö‡∏ö‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÉ‡∏´‡∏°‡πà ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏á‡πà‡∏≤‡∏¢ ‡∏õ‡∏£‡∏∞‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡∏†‡∏≤‡∏û‡∏™‡∏π‡∏á',
      imageUrl: '/modern-financial-promotion-banner-cyan-theme.jpg',
      actionUrl: '/agent/dashboard',
      isActive: true,
      sortOrder: 1,
      targetUserTypes: ['AGENT'],
    },
  ]

  for (const banner of banners) {
    await prisma.banner.create({ data: banner })
  }

  // ============================================
  // 13. Create Privileges
  // ============================================
  console.log('‚ú® Creating privileges...')

  const privileges = [
    {
      title: '‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÄ‡∏Å‡πà‡∏≤ - ‡∏™‡πà‡∏ß‡∏ô‡∏•‡∏î‡∏î‡∏≠‡∏Å‡πÄ‡∏ö‡∏µ‡πâ‡∏¢ 1%',
      description:
        '‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ô‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏Ç‡∏≠‡∏™‡πà‡∏ß‡∏ô‡∏•‡∏î‡∏î‡∏≠‡∏Å‡πÄ‡∏ö‡∏µ‡πâ‡∏¢ 1% ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡∏¥‡∏ô‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡πÉ‡∏´‡∏°‡πà',
      imageUrl: '/images/privilege-existing-customer.png',
      actionUrl: '/customer/loan/new',
      isActive: true,
      sortOrder: 1,
      targetUserTypes: ['CUSTOMER'],
      requiresLoan: true,
      validFrom: new Date(),
      validUntil: new Date(Date.now() + 90 * 24 * 60 * 60 * 1000), // 90 days
    },
    {
      title: '‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡∏û‡∏¥‡πÄ‡∏®‡∏© VIP',
      description: '‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡πà‡∏á‡∏î‡πà‡∏ß‡∏ô ‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥‡∏†‡∏≤‡∏¢‡πÉ‡∏ô 24 ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á',
      imageUrl: '/images/privilege-vip.png',
      actionUrl: '/customer/contact',
      isActive: true,
      sortOrder: 2,
      targetUserTypes: ['CUSTOMER'],
      coinCost: 500,
      requiresLoan: false,
    },
  ]

  for (const privilege of privileges) {
    await prisma.privilege.create({ data: privilege })
  }

  // ============================================
  // 14. Create System Configuration
  // ============================================
  console.log('‚öôÔ∏è Creating system configuration...')

  const systemConfigs = [
    {
      key: 'MAX_LOAN_AMOUNT',
      value: '2000000',
      description: '‡∏ß‡∏á‡πÄ‡∏á‡∏¥‡∏ô‡∏™‡∏¥‡∏ô‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î (‡∏ö‡∏≤‡∏ó)',
    },
    {
      key: 'MIN_LOAN_AMOUNT',
      value: '50000',
      description: '‡∏ß‡∏á‡πÄ‡∏á‡∏¥‡∏ô‡∏™‡∏¥‡∏ô‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡πà‡∏≥ (‡∏ö‡∏≤‡∏ó)',
    },
    {
      key: 'DEFAULT_INTEREST_RATE',
      value: '12.00',
      description: '‡∏≠‡∏±‡∏ï‡∏£‡∏≤‡∏î‡∏≠‡∏Å‡πÄ‡∏ö‡∏µ‡πâ‡∏¢‡∏°‡∏≤‡∏ï‡∏£‡∏ê‡∏≤‡∏ô (%‡∏ï‡πà‡∏≠‡∏õ‡∏µ)',
    },
    {
      key: 'MAX_LOAN_TERM_MONTHS',
      value: '60',
      description: '‡∏£‡∏∞‡∏¢‡∏∞‡πÄ‡∏ß‡∏•‡∏≤‡∏™‡∏¥‡∏ô‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î (‡πÄ‡∏î‡∏∑‡∏≠‡∏ô)',
    },
    {
      key: 'COINS_PER_ON_TIME_PAYMENT',
      value: '50',
      description: '‡πÄ‡∏´‡∏£‡∏µ‡∏¢‡∏ç‡∏ó‡∏≠‡∏á‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏à‡∏≤‡∏Å‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡∏ï‡∏£‡∏á‡πÄ‡∏ß‡∏•‡∏≤',
    },
    {
      key: 'SIGNUP_BONUS_COINS',
      value: '50',
      description: '‡πÄ‡∏´‡∏£‡∏µ‡∏¢‡∏ç‡∏ó‡∏≠‡∏á‡πÇ‡∏ö‡∏ô‡∏±‡∏™‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å',
    },
    {
      key: 'LATE_PAYMENT_FEE_RATE',
      value: '3.00',
      description: '‡∏≠‡∏±‡∏ï‡∏£‡∏≤‡∏Ñ‡πà‡∏≤‡∏õ‡∏£‡∏±‡∏ö‡∏ä‡∏≥‡∏£‡∏∞‡∏•‡πà‡∏≤‡∏ä‡πâ‡∏≤ (%‡∏ï‡πà‡∏≠‡πÄ‡∏î‡∏∑‡∏≠‡∏ô)',
    },
    {
      key: 'MAINTENANCE_MODE',
      value: 'false',
      description: '‡πÇ‡∏´‡∏°‡∏î‡∏õ‡∏¥‡∏î‡∏õ‡∏£‡∏∏‡∏á‡∏£‡∏∞‡∏ö‡∏ö (true/false)',
    },
  ]

  for (const config of systemConfigs) {
    await prisma.systemConfig.create({ data: config })
  }

  // ============================================
  // 15. Create Audit Logs
  // ============================================
  console.log('üìã Creating audit logs...')

  await prisma.auditLog.create({
    data: {
      adminId: loanOfficer.id,
      action: 'APPROVE_LOAN',
      entity: 'loan_applications',
      entityId: loanApp1.id,
      oldData: { status: 'UNDER_REVIEW' },
      newData: {
        status: 'APPROVED',
        approvedAmount: 450000,
        reviewNotes:
          '‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥‡∏™‡∏¥‡∏ô‡πÄ‡∏ä‡∏∑‡πà‡∏≠ 450,000 ‡∏ö‡∏≤‡∏ó ‡∏≠‡∏±‡∏ï‡∏£‡∏≤‡∏î‡∏≠‡∏Å‡πÄ‡∏ö‡∏µ‡πâ‡∏¢ 12% ‡∏ï‡πà‡∏≠‡∏õ‡∏µ ‡∏£‡∏∞‡∏¢‡∏∞‡πÄ‡∏ß‡∏•‡∏≤ 36 ‡πÄ‡∏î‡∏∑‡∏≠‡∏ô',
      },
      ipAddress: '192.168.1.100',
      userAgent: 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36',
    },
  })

  await prisma.auditLog.create({
    data: {
      adminId: superAdmin.id,
      action: 'CREATE_ADMIN',
      entity: 'admins',
      entityId: loanOfficer.id,
      newData: {
        email: 'loan.officer@infinitex.com',
        role: 'LOAN_OFFICER',
        firstName: 'Loan',
        lastName: 'Officer',
      },
      ipAddress: '192.168.1.101',
      userAgent: 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36',
    },
  })

  console.log('‚úÖ Database seeding completed successfully!')
  console.log('\nüìä Summary of seeded data:')
  console.log(`- Admins: 3 (1 Super Admin, 1 Loan Officer, 1 Customer Service)`)
  console.log(`- Users: 13 (8 Customers, 5 Agents) - varied activity levels`)
  console.log(`- Agent-Customer Relationships: 8 active assignments`)
  console.log(
    `- Loan Applications: 7 (2 approved, 1 under review, 1 submitted, 1 rejected, 1 draft, 1 cancelled)`
  )
  console.log(
    `- Active Loans: 2 (different stages, one with late payment history)`
  )
  console.log(`- Installments: 84 total (20 paid with varied payment patterns)`)
  console.log(`- Payments: 20 (mixed QR Code & Barcode, some with late fees)`)
  console.log(`- Rewards: 4 (varied cost and type)`)
  console.log(`- Coin Transactions: 25+ (diverse earning patterns)`)
  console.log(`- Notifications: 16 (mixed read/unread status)`)
  console.log(`- Banners: 3 (customer/agent targeting)`)
  console.log(`- Privileges: 2 (different requirements)`)
  console.log(`- System Configs: 8`)
  console.log(`- Audit Logs: 2`)

  console.log('\nüîë Test Accounts:')
  console.log('--- Admins ---')
  console.log('Super Admin: admin@infinitex.com / admin123')
  console.log('Loan Officer: loan.officer@infinitex.com / loan123')
  console.log('Customer Service: support@infinitex.com / support123')

  console.log('\n--- Customers ---')
  console.log(
    'Customer 1: 0801234567 / PIN: 1234 (‡∏™‡∏°‡∏ä‡∏≤‡∏¢ ‡πÉ‡∏à‡∏î‡∏µ) - ‡∏°‡∏µ‡∏™‡∏¥‡∏ô‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô'
  )
  console.log('Customer 2: 0812345678 / PIN: 5678 (‡∏™‡∏°‡∏´‡∏ç‡∏¥‡∏á ‡∏£‡∏±‡∏Å‡∏î‡∏µ) - ‡∏£‡∏≠‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥')
  console.log(
    'Customer 3: 0823456789 / PIN: 1111 (‡∏ß‡∏¥‡∏ä‡∏±‡∏¢ ‡∏™‡∏∏‡∏Ç‡πÉ‡∏™) - ‡∏™‡∏¥‡∏ô‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏Å‡πà‡∏≤ ‡∏°‡∏µ‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏î‡∏µ'
  )
  console.log(
    'Customer 4: 0834567890 / PIN: 2222 (‡∏ô‡∏†‡∏±‡∏™‡∏™‡∏£ ‡∏à‡∏±‡∏ô‡∏ó‡∏£‡πå‡πÄ‡∏û‡πá‡∏ç) - ‡πÉ‡∏ö‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏ñ‡∏π‡∏Å‡∏õ‡∏è‡∏¥‡πÄ‡∏™‡∏ò'
  )
  console.log(
    'Customer 5: 0845678901 / PIN: 3333 (‡∏õ‡∏£‡∏∞‡∏¢‡∏∏‡∏ó‡∏ò ‡∏°‡∏±‡πà‡∏ô‡∏Ñ‡∏á) - ‡∏™‡πà‡∏á‡πÉ‡∏ö‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡πÅ‡∏•‡πâ‡∏ß'
  )
  console.log(
    'Customer 6: 0856789012 / PIN: 4444 (‡∏™‡∏∏‡∏ó‡∏ò‡∏¥‡∏î‡∏≤ ‡πÄ‡∏î‡∏¥‡∏ô‡∏î‡∏µ) - ‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô'
  )
  console.log(
    'Customer 7: 0867890123 / PIN: 5555 (‡∏≠‡∏£‡∏£‡∏ñ‡∏û‡∏• ‡πÄ‡∏Å‡πà‡∏á‡∏Å‡∏≤‡∏£) - ‡πÉ‡∏ö‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏£‡πà‡∏≤‡∏á'
  )
  console.log(
    'Customer 8: 0878901234 / PIN: 6666 (‡∏£‡∏±‡∏ï‡∏ô‡∏≤ ‡∏™‡∏∏‡∏Ç‡∏™‡∏°) - ‡πÄ‡∏´‡∏£‡∏µ‡∏¢‡∏ç‡∏ó‡∏≠‡∏á‡πÄ‡∏¢‡∏≠‡∏∞'
  )

  console.log('\n--- Agents ---')
  console.log('Agent 1: 0891234567 / PIN: 9999 (‡∏™‡∏∏‡∏£‡∏ä‡∏±‡∏¢ ‡πÄ‡∏Å‡πà‡∏á‡∏á‡∏≤‡∏ô) - ‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤ 3 ‡∏Ñ‡∏ô')
  console.log('Agent 2: 0892345678 / PIN: 8888 (‡∏ß‡∏£‡∏£‡∏ì‡∏≤ ‡∏î‡∏µ‡πÄ‡∏¢‡∏µ‡πà‡∏¢‡∏°) - ‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤ 3 ‡∏Ñ‡∏ô')
  console.log('Agent 3: 0893456789 / PIN: 7777 (‡∏ò‡∏µ‡∏£‡∏∞ ‡∏õ‡∏£‡∏∞‡∏™‡∏ö‡∏ú‡∏•) - ‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤ 2 ‡∏Ñ‡∏ô')
  console.log('Agent 4: 0894567890 / PIN: 6666 (‡∏à‡∏¥‡∏£‡∏±‡∏ä‡∏ç‡∏≤ ‡∏ó‡∏≥‡∏î‡∏µ) - ‡πÄ‡∏≠‡πÄ‡∏à‡∏ô‡∏ï‡πå‡πÉ‡∏´‡∏°‡πà')
  console.log('Agent 5: 0895678901 / PIN: 5555 (‡∏™‡∏°‡πÄ‡∏Å‡∏µ‡∏¢‡∏£‡∏ï‡∏¥ ‡∏´‡∏¢‡∏∏‡∏î‡∏û‡∏±‡∏Å) - ‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô')

  console.log('\nüéØ Test Scenarios Available:')
  console.log('‚úì ‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ô‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô (‡∏ä‡∏≥‡∏£‡∏∞‡∏ï‡∏£‡∏á‡πÄ‡∏ß‡∏•‡∏≤ vs ‡∏ä‡∏≥‡∏£‡∏∞‡∏•‡πà‡∏≤‡∏ä‡πâ‡∏≤)')
  console.log('‚úì ‡πÉ‡∏ö‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡πÉ‡∏ô‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏ï‡πà‡∏≤‡∏á‡πÜ (‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥, ‡∏£‡∏≠‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥, ‡∏õ‡∏è‡∏¥‡πÄ‡∏™‡∏ò, ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å)')
  console.log('‚úì ‡∏£‡∏∞‡∏ö‡∏ö‡πÄ‡∏´‡∏£‡∏µ‡∏¢‡∏ç‡∏ó‡∏≠‡∏á‡πÅ‡∏•‡∏∞‡∏Ç‡∏≠‡∏á‡∏£‡∏≤‡∏á‡∏ß‡∏±‡∏•')
  console.log('‚úì ‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏´‡∏•‡∏≤‡∏Å‡∏´‡∏•‡∏≤‡∏¢')
  console.log('‚úì ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏±‡∏°‡∏û‡∏±‡∏ô‡∏ò‡πå‡πÄ‡∏≠‡πÄ‡∏à‡∏ô‡∏ï‡πå-‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤')
  console.log('‚úì ‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô (‡∏ï‡∏£‡∏á‡πÄ‡∏ß‡∏•‡∏≤/‡∏•‡πà‡∏≤‡∏ä‡πâ‡∏≤)')
  console.log('‚úì ‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô/‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô')
}

main()
  .catch((e) => {
    console.error('‚ùå Error during seeding:', e)
    process.exit(1)
  })
  .finally(async () => {
    await prisma.$disconnect()
  })
